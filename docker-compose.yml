version: '3.8'

services:
  # Frontend React
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - api-gateway

  # API Gateway
  api-gateway:
    build: ./services/api-gateway
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - HOTEL_INFO_URL=http://hotel-info:8081
      - HOTEL_SEARCH_URL=http://hotel-search:8082
      - USER_BOOKING_URL=http://user-booking:8083
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - GIN_MODE=debug
    depends_on:
      - hotel-info
      - hotel-search
      - user-booking

  # Microservicio de ficha de hotel
  hotel-info:
    build: ./services/hotel-info
    ports:
      - "8081:8081"
    environment:
      - PORT=8081
      - MONGODB_URL=mongodb://mongodb:27017
      - MONGODB_DATABASE=hotel_booking
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - GIN_MODE=debug
    depends_on:
      - mongodb
      - rabbitmq

  # Microservicio de búsqueda
  hotel-search:
    build: ./services/hotel-search
    ports:
      - "8082:8082"
    environment:
      - PORT=8082
      - SOLR_URL=http://solr:8983/solr/hotels
      - USER_BOOKING_URL=http://user-booking:8083
      - HOTEL_INFO_URL=http://hotel-info:8081
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - GIN_MODE=debug
    depends_on:
      - solr
      - rabbitmq
      - user-booking
      - hotel-info

  # Microservicio de usuarios y reservas
  user-booking:
    build: ./services/user-booking
    ports:
      - "8083:8083"
    environment:
      - PORT=8083
      - MYSQL_DSN=root:password@tcp(mysql:3306)/hotel_booking?charset=utf8mb4&parseTime=True&loc=Local
      - MEMCACHED_URL=memcached:11211
      - AMADEUS_API_KEY=${AMADEUS_API_KEY}
      - AMADEUS_API_SECRET=${AMADEUS_API_SECRET}
      - AMADEUS_API_URL=https://test.api.amadeus.com
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - GIN_MODE=debug
    depends_on:
      - mysql
      - memcached

  # Bases de datos y servicios
  mongodb:
    image: mongo:5.0
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=hotel_booking

  mysql:
    image: mysql:8.0
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=hotel_booking
    command: --default-authentication-plugin=mysql_native_password

  # Solr para búsquedas
  solr:
    image: solr:8.11
    ports:
      - "8983:8983"
    volumes:
      - solr_data:/var/solr
      - ./solr/configsets:/opt/solr/server/solr/configsets
    command:
      - solr-precreate
      - hotels
      - /opt/solr/server/solr/configsets/hotels

  # RabbitMQ para mensajería
  rabbitmq:
    image: rabbitmq:3.11-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  # Memcached para caché
  memcached:
    image: memcached:1.6-alpine
    ports:
      - "11211:11211"
    command: memcached -m 64

  # Load Balancer (HAProxy)
  load-balancer:
    image: haproxy:2.6
    ports:
      - "80:80"
      - "8404:8404"
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - api-gateway

  # Nginx para servir archivos estáticos
  nginx:
    image: nginx:alpine
    ports:
      - "8090:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./uploads:/usr/share/nginx/html/uploads
    depends_on:
      - frontend

volumes:
  mongodb_data:
  mysql_data:
  solr_data:
  rabbitmq_data: